<resources>
    <string name="app_name">C Programming</string>


    <string-array name="condition">

        <item> IF </item>
        <item> ELSE IF </item>
        <item> WHILE </item>
        <item> DO WHILE </item>
        <item> FOR </item>
        <item> SWITCH </item>
        <item> BREAK </item>
        <item> CONTINUE </item>
        <item> goto </item>


    </string-array>

    <string-array name="strings">

        <item> STRING </item>
        <item> STRING CMP </item>
        <item>  STRING CONCATE </item>
        <item> STRING COPY </item>
        <item> STRING FUNC </item>
        <item> STRING GETS PUTS </item>
        <item> STRING LENGTH </item>
        <item> STRING REVERSE </item>
        <item> STRING STR </item>
        <item> STRING WR </item>


    </string-array>


    <string-array name="preprocessor">

        <item> DIRECTIVES </item>
        <item> MACROS </item>
        <item> #include </item>
        <item> #define </item>
        <item> #undef </item>
        <item> #ifdef</item>
        <item> #ifndef </item>
        <item> #if </item>
        <item> #else </item>
        <item> #error </item>
        <item> #pragma </item>


    </string-array>

    <string-array name="problem">

        <item> FIBONACCI SERIES </item>
        <item> PRIME NUMBER </item>
        <item> PALINDROME NUMBER </item>
        <item> FACTORIAL </item>
        <item> ARMSTRONG NUMBER </item>
        <item> SUM OF DIGITS</item>
        <item> REVERSE NUMBER </item>
        <item> SWAP TWO NUMBER </item>
        <item> MATRIX MULTIPLICATION </item>
        <item> DECIMAL TO BINARY </item>
        <item> ALPHABET TRIANGLE </item>
        <item> NUMBER TRIANGLE </item>
        <item> NUMBER IN CHARECTER </item>

    </string-array>


    <string name="qstn_1">

        1) What is C language?\n
        C is a mid-level and procedural programming language. The Procedural programming language is also known as the structured programming language is a technique in which large programs are broken down into smaller modules,
        and each module uses structured code. This technique minimizes error and misinterpretation.
    </string>

    <string name="qstn_2">
        2) Why is C known as a mother language?\n
         C is known as a mother language because most of the compilers and JVMs are written in C language. Most of the languages which are developed after C language has borrowed heavily from it like C++, Python, Rust, javascript, etc.
        It introduces new core concepts like arrays, functions, file handling which are used in these languages.

    </string>

    <string name="qstn_3">
        3) Why is C called a mid-level programming language?\n
        C is called a mid-level programming language because it binds the low level and high -level programming language.
        We can use C language as a System programming to develop the operating system as well as an Application programming to generate menu driven customer driven billing system.

    </string>

    <string name="qstn_4">
        4) Who is the founder of C language?\n
          Dennis Ritchie.

    </string>

    <string name="qstn_5">

        5) When was C language developed?\n
        C language was developed in 1972 at bell laboratories of AT and T.
    </string>

    <string name="qstn_6">

        6) What are the features of the C language?\n
         The main features of C language are given below:
         Simple: C is a simple language because it follows the structured approach, i.e., a program is broken into parts
         Portable: C is highly portable means that once the program is written can be run on any machine with little or no modifications.
         Mid Level: C is a mid-level programming language as it combines the low- level language with the features of the high-level language.
         Structured: C is a structured language as the C program is broken into parts.
         Fast Speed: C language is very fast as it uses a powerful set of data types and operators.
         Memory Management: C provides an inbuilt memory function that saves the memory and improves the efficiency of our program.
         Extensible: C is an extensible language as it can adopt new features in the future.
    </string>

    <string name="qstn_7">
        7) What is the use of printf() and scanf() functions?
         printf(): The printf() function is used to print the integer, character, float and string values on to the screen.
         Following are the format specifier:
         %d: It is a format specifier used to print an integer value.
         %s: It is a format specifier used to print a string.
         %c: It is a format specifier used to display a character value.
         %f: It is a format specifier used to display a floating point value.
         scanf(): The scanf() function is used to take input from the user.

    </string>

    <string name="qstn_8">

        8) What is the use of a static variable in C?\n
        Following are the uses of a static variable:
        A variable which is declared as static is known as a static variable. The static variable retains its value between multiple function calls.
        Static variables are used because the scope of the static variable is available in the entire program. So, we can access a static variable anywhere in the program.
        The static variable is initially initialized to zero. If we update the value of a variable, then the updated value is assigned.
        The static variable is used as a common value which is shared by all the methods.
        The static variable is initialized only once in the memory heap to reduce the memory usage.

    </string>

    <string name="qstn_9">

        9) What is the use of the function in C?\n
Uses of C function are:
C functions are used to avoid the rewriting the same code again and again in our program.
C functions can be called any number of times from any place of our program.
When a program is divided into functions, then any part of our program can easily be tracked.
C functions provide the reusability concept, i.e., it breaks the big task into smaller tasks so that it makes the C program more understandable.

    </string>

    <string name="qstn_10">
        10) What is recursion in C?\n
When a function calls itself, and this process is known as recursion. The function that calls itself is known as a recursive function.
Recursive function comes in two phases:
Winding phase
Unwinding phase
Winding phase: When the recursive function calls itself, and this phase ends when the condition is reached.
Unwinding phase: Unwinding phase starts when the condition is reached, and the control returns to the original call

    </string>

    <string name="qstn_11">
        11) What is an array in C?\n
An Array is a group of similar types of elements. It has a contiguous memory location. It makes the code optimized, easy to traverse and easy to sort. The size and type of arrays cannot be changed after its declaration.
Arrays are of two types:
One-dimensional array: One-dimensional array is an array that stores the elements one after the another.
Syntax:

data_type array_name[size];
Multidimensional array: Multidimensional array is an array that contains more than one array.
Syntax:

data_type array_name[size];

    </string>
    <string name="qstn_12">
        12) What is a pointer in C?\n
  A pointer is a variable that refers to the address of a value. It makes the code optimized and makes the performance fast.
        Whenever a variable is declared inside a program, then the system allocates some memory to a variable. The memory contains some address number. The variables that hold this address number is known as the pointer variable.
  For example:

Data_type *p;
The above syntax tells that p is a pointer variable that holds the address number of a given data type value.

    </string>
    <string name="qstn_13">
        13) What is the usage of the pointer in C?
Accessing array elements: Pointers are used in traversing through an array of integers and strings. The string is an array of characters which is terminated by a null character
Dynamic memory allocation: Pointers are used in allocation and deallocation of memory during the execution of a program.
Call by Reference: The pointers are used to pass a reference of a variable to other function.
Data Structures like a tree, graph, linked list, etc.: The pointers are used to construct different data structures like tree, graph, linked list, etc.

    </string>
    <string name="qstn_14">
        14) What is a NULL pointer in C?
A pointer that doesnt refer to any address of value but NULL is known as a NULL pointer.
        When we assign a 0 value to a pointer of any type, then it becomes a Null pointer.

    </string>
    <string name="qstn_15">
        15) What is dangling pointer in C?
If a pointer is pointing any memory location, but meanwhile another pointer deletes the memory occupied by the first pointer while the first pointer still points to that memory location, the first pointer will be known as a dangling pointer. This problem is known as a dangling pointer problem.
Dangling pointer arises when an object is deleted without modifying the value of the pointer. The pointer points to the deallocated memory.

    </string>
    <string name="qstn_16">

        16) What is static memory allocation?
In case of static memory allocation, memory is allocated at compile time, and memory cant be increased while executing the program. It is used in the array.
The lifetime of a variable in static memory is the lifetime of a program.
The static memory is allocated using static keyword.
The static memory is implemented using stacks or heap.
The pointer is required to access the variable present in the static memory.
The static memory is faster than dynamic memory.
In static memory, more memory space is required to store the variable.

For example:
int a[10];
The above example creates an array of integer type, and the size of an array is fixed, i.e., 10.
    </string>
    <string name="qstn_17">

        17) What is dynamic memory allocation?\n
In case of dynamic memory allocation, memory is allocated at runtime and memory can be increased while executing the program. It is used in the linked list.
The malloc() or calloc() function is required to allocate the memory at the runtime.
An allocation or deallocation of memory is done at the execution time of a program.
No dynamic pointers are required to access the memory.
The dynamic memory is implemented using data segments.
Less memory space is required to store the variable.

For example
int *p= malloc(sizeof(int)*10);
    </string>
    <string name="qstn_18">
        18) What is the structure?
The structure is a user-defined data type that allows storing multiple types of data in a single unit. It occupies the sum of the memory of all members.
The structure members can be accessed only through structure variables.
Structure variables accessing the same structure but the memory allocated for each variable will be different.

    </string>
    <string name="qstn_19">
        19) What is a union?
The union is a user-defined data type that allows storing multiple types of data in a single unit. However, it doesnt occupy the sum of the memory of all members. It holds the memory of the largest member only.
In union, we can access only one variable at a time as it allocates one common space for all the members of a union.
    </string>
    <string name="qstn_20">

        20) What is an auto keyword in C?\n
In C, every local variable of a function is known as an automatic (auto) variable. Variables which are declared inside the function block are known as a local variable. The local variables are also known as an auto variable. It is optional to use an auto keyword before the data type of a variable.
        If no value is stored in the local variable, then it consists of a garbage value.
    </string>
    <string name="qstn_21">

        21) What is the purpose of sprintf() function?\n
The sprintf() stands for "string print." The sprintf() function does not print the output on the console screen. It transfers the data to the buffer. It returns the total number of characters present in the string.
Syntax

int sprintf ( char * str, const char * format, ... );
    </string>
    <string name="qstn_22">

        22) What is typecasting?\n
The typecasting is a process of converting one data type into another is known as typecasting. If we want to store the floating type value to an int type, then we will convert the data type into another data type explicitly.
Syntax

(type_name) expression;
    </string>


</resources>
